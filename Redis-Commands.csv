,Command,Arguments,Summary
0,ACL LOAD,,Reload the ACLs from the configured ACL file
1,ACL SAVE,,Save the current ACL rules in the configured ACL file
2,ACL LIST,,List the current ACL rules in ACL config file format
3,ACL USERS,,List the username of all the configured ACL rules
4,ACL GETUSER,username,Get the rules for a specific ACL user
5,ACL SETUSER,"username
                    [rule [rule ...]]",Modify or create the rules for a specific ACL user
6,ACL DELUSER,username [username ...],Remove the specified ACL users and the associated rules
7,ACL CAT,[categoryname],List the ACL categories or the commands inside a category
8,ACL GENPASS,[bits],Generate a pseudorandom secure password to use for ACL users
9,ACL WHOAMI,,Return the name of the user associated to the current connection
10,ACL LOG,[count or RESET],List latest events denied because of ACLs in place
11,ACL HELP,,Show helpful text about the different subcommands
12,APPEND,"key
                    value",Append a value to a key
13,AUTH,"[username]
                    password",Authenticate to the server
14,BGREWRITEAOF,,Asynchronously rewrite the append-only file
15,BGSAVE,[SCHEDULE],Asynchronously save the dataset to disk
16,BITCOUNT,"key
                    [start end]",Count set bits in a string
17,BITFIELD,"key
                    [GET type offset]
                    [SET type offset value]
                    [INCRBY type offset increment]
                    [OVERFLOW WRAP|SAT|FAIL]",Perform arbitrary bitfield integer operations on strings
18,BITOP,"operation
                    destkey
                    key [key ...]",Perform bitwise operations between strings
19,BITPOS,"key
                    bit
                    [start]
                    [end]",Find first bit set or clear in a string
20,BLPOP,"key [key ...]
                    timeout","Remove and get the first element in a list, or block until one is available"
21,BRPOP,"key [key ...]
                    timeout","Remove and get the last element in a list, or block until one is available"
22,BRPOPLPUSH,"source
                    destination
                    timeout","Pop an element from a list, push it to another list and return it; or block until one is available"
23,BZPOPMIN,"key [key ...]
                    timeout","Remove and return the member with the lowest score from one or more sorted sets, or block until one is available"
24,BZPOPMAX,"key [key ...]
                    timeout","Remove and return the member with the highest score from one or more sorted sets, or block until one is available"
25,CLIENT CACHING,YES|NO,Instruct the server about tracking or not keys in the next request
26,CLIENT ID,,Returns the client ID for the current connection
27,CLIENT KILL,"[ip:port]
                    [ID client-id]
                    [TYPE normal|master|slave|pubsub]
                    [USER username]
                    [ADDR ip:port]
                    [SKIPME yes/no]",Kill the connection of a client
28,CLIENT LIST,[TYPE normal|master|replica|pubsub],Get the list of client connections
29,CLIENT GETNAME,,Get the current connection name
30,CLIENT GETREDIR,,Get tracking notifications redirection client ID if any
31,CLIENT PAUSE,timeout,Stop processing commands from clients for some time
32,CLIENT REPLY,ON|OFF|SKIP,Instruct the server whether to reply to commands
33,CLIENT SETNAME,connection-name,Set the current connection name
34,CLIENT TRACKING,"ON|OFF
                    [REDIRECT client-id]
                    [PREFIX prefix [PREFIX prefix ...]]
                    [BCAST]
                    [OPTIN]
                    [OPTOUT]
                    [NOLOOP]",Enable or disable server assisted client side caching support
35,CLIENT UNBLOCK,"client-id
                    [TIMEOUT|ERROR]",Unblock a client blocked in a blocking command from a different connection
36,CLUSTER ADDSLOTS,slot [slot ...],Assign new hash slots to receiving node
37,CLUSTER BUMPEPOCH,,Advance the cluster config epoch
38,CLUSTER COUNT-FAILURE-REPORTS,node-id,Return the number of failure reports active for a given node
39,CLUSTER COUNTKEYSINSLOT,slot,Return the number of local keys in the specified hash slot
40,CLUSTER DELSLOTS,slot [slot ...],Set hash slots as unbound in receiving node
41,CLUSTER FAILOVER,[FORCE|TAKEOVER],Forces a replica to perform a manual failover of its master.
42,CLUSTER FLUSHSLOTS,,Delete a node's own slots information
43,CLUSTER FORGET,node-id,Remove a node from the nodes table
44,CLUSTER GETKEYSINSLOT,"slot
                    count",Return local key names in the specified hash slot
45,CLUSTER INFO,,Provides info about Redis Cluster node state
46,CLUSTER KEYSLOT,key,Returns the hash slot of the specified key
47,CLUSTER MEET,"ip
                    port",Force a node cluster to handshake with another node
48,CLUSTER MYID,,Return the node id
49,CLUSTER NODES,,Get Cluster config for the node
50,CLUSTER REPLICATE,node-id,Reconfigure a node as a replica of the specified master node
51,CLUSTER RESET,[HARD|SOFT],Reset a Redis Cluster node
52,CLUSTER SAVECONFIG,,Forces the node to save cluster state on disk
53,CLUSTER SET-CONFIG-EPOCH,config-epoch,Set the configuration epoch in a new node
54,CLUSTER SETSLOT,"slot
                    IMPORTING|MIGRATING|STABLE|NODE
                    [node-id]",Bind a hash slot to a specific node
55,CLUSTER SLAVES,node-id,List replica nodes of the specified master node
56,CLUSTER REPLICAS,node-id,List replica nodes of the specified master node
57,CLUSTER SLOTS,,Get array of Cluster slot to node mappings
58,COMMAND,,Get array of Redis command details
59,COMMAND COUNT,,Get total number of Redis commands
60,COMMAND GETKEYS,,Extract keys given a full Redis command
61,COMMAND INFO,command-name [command-name ...],Get array of specific Redis command details
62,CONFIG GET,parameter,Get the value of a configuration parameter
63,CONFIG REWRITE,,Rewrite the configuration file with the in memory configuration
64,CONFIG SET,"parameter
                    value",Set a configuration parameter to the given value
65,CONFIG RESETSTAT,,Reset the stats returned by INFO
66,DBSIZE,,Return the number of keys in the selected database
67,DEBUG OBJECT,key,Get debugging information about a key
68,DEBUG SEGFAULT,,Make the server crash
69,DECR,key,Decrement the integer value of a key by one
70,DECRBY,"key
                    decrement",Decrement the integer value of a key by the given number
71,DEL,key [key ...],Delete a key
72,DISCARD,,Discard all commands issued after MULTI
73,DUMP,key,Return a serialized version of the value stored at the specified key.
74,ECHO,message,Echo the given string
75,EVAL,"script
                    numkeys
                    key [key ...]
                    arg [arg ...]",Execute a Lua script server side
76,EVALSHA,"sha1
                    numkeys
                    key [key ...]
                    arg [arg ...]",Execute a Lua script server side
77,EXEC,,Execute all commands issued after MULTI
78,EXISTS,key [key ...],Determine if a key exists
79,EXPIRE,"key
                    seconds",Set a key's time to live in seconds
80,EXPIREAT,"key
                    timestamp",Set the expiration for a key as a UNIX timestamp
81,FLUSHALL,[ASYNC],Remove all keys from all databases
82,FLUSHDB,[ASYNC],Remove all keys from the current database
83,GEOADD,"key
                    longitude latitude member [longitude latitude member ...]",Add one or more geospatial items in the geospatial index represented using a sorted set
84,GEOHASH,"key
                    member [member ...]",Returns members of a geospatial index as standard geohash strings
85,GEOPOS,"key
                    member [member ...]",Returns longitude and latitude of members of a geospatial index
86,GEODIST,"key
                    member1
                    member2
                    [m|km|ft|mi]",Returns the distance between two members of a geospatial index
87,GEORADIUS,"key
                    longitude
                    latitude
                    radius
                    m|km|ft|mi
                    [WITHCOORD]
                    [WITHDIST]
                    [WITHHASH]
                    [COUNT count]
                    [ASC|DESC]
                    [STORE key]
                    [STOREDIST key]",Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a point
88,GEORADIUSBYMEMBER,"key
                    member
                    radius
                    m|km|ft|mi
                    [WITHCOORD]
                    [WITHDIST]
                    [WITHHASH]
                    [COUNT count]
                    [ASC|DESC]
                    [STORE key]
                    [STOREDIST key]",Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a member
89,GET,key,Get the value of a key
90,GETBIT,"key
                    offset",Returns the bit value at offset in the string value stored at key
91,GETRANGE,"key
                    start
                    end",Get a substring of the string stored at a key
92,GETSET,"key
                    value",Set the string value of a key and return its old value
93,HDEL,"key
                    field [field ...]",Delete one or more hash fields
94,HELLO,"protover
                    [AUTH username password]
                    [SETNAME clientname]",switch Redis protocol
95,HEXISTS,"key
                    field",Determine if a hash field exists
96,HGET,"key
                    field",Get the value of a hash field
97,HGETALL,key,Get all the fields and values in a hash
98,HINCRBY,"key
                    field
                    increment",Increment the integer value of a hash field by the given number
99,HINCRBYFLOAT,"key
                    field
                    increment",Increment the float value of a hash field by the given amount
100,HKEYS,key,Get all the fields in a hash
101,HLEN,key,Get the number of fields in a hash
102,HMGET,"key
                    field [field ...]",Get the values of all the given hash fields
103,HMSET,"key
                    field value [field value ...]",Set multiple hash fields to multiple values
104,HSET,"key
                    field value [field value ...]",Set the string value of a hash field
105,HSETNX,"key
                    field
                    value","Set the value of a hash field, only if the field does not exist"
106,HSTRLEN,"key
                    field",Get the length of the value of a hash field
107,HVALS,key,Get all the values in a hash
108,INCR,key,Increment the integer value of a key by one
109,INCRBY,"key
                    increment",Increment the integer value of a key by the given amount
110,INCRBYFLOAT,"key
                    increment",Increment the float value of a key by the given amount
111,INFO,[section],Get information and statistics about the server
112,LOLWUT,[VERSION version],Display some computer art and the Redis version
113,KEYS,pattern,Find all keys matching the given pattern
114,LASTSAVE,,Get the UNIX time stamp of the last successful save to disk
115,LINDEX,"key
                    index",Get an element from a list by its index
116,LINSERT,"key
                    BEFORE|AFTER
                    pivot
                    element",Insert an element before or after another element in a list
117,LLEN,key,Get the length of a list
118,LPOP,key,Remove and get the first element in a list
119,LPOS,"key
                    element
                    [RANK rank]
                    [COUNT num-matches]
                    [MAXLEN len]",Return the index of matching elements on a list
120,LPUSH,"key
                    element [element ...]",Prepend one or multiple elements to a list
121,LPUSHX,"key
                    element [element ...]","Prepend an element to a list, only if the list exists"
122,LRANGE,"key
                    start
                    stop",Get a range of elements from a list
123,LREM,"key
                    count
                    element",Remove elements from a list
124,LSET,"key
                    index
                    element",Set the value of an element in a list by its index
125,LTRIM,"key
                    start
                    stop",Trim a list to the specified range
126,MEMORY DOCTOR,,Outputs memory problems report
127,MEMORY HELP,,Show helpful text about the different subcommands
128,MEMORY MALLOC-STATS,,Show allocator internal stats
129,MEMORY PURGE,,Ask the allocator to release memory
130,MEMORY STATS,,Show memory usage details
131,MEMORY USAGE,"key
                    [SAMPLES count]",Estimate the memory usage of a key
132,MGET,key [key ...],Get the values of all the given keys
133,MIGRATE,"host
                    port
                    key|""""
                    destination-db
                    timeout
                    [COPY]
                    [REPLACE]
                    [AUTH password]
                    [AUTH2 username password]
                    [KEYS key [key ...]]",Atomically transfer a key from a Redis instance to another one.
134,MODULE LIST,,List all modules loaded by the server
135,MODULE LOAD,"path
                    [ arg [arg ...]]",Load a module
136,MODULE UNLOAD,name,Unload a module
137,MONITOR,,Listen for all requests received by the server in real time
138,MOVE,"key
                    db",Move a key to another database
139,MSET,key value [key value ...],Set multiple keys to multiple values
140,MSETNX,key value [key value ...],"Set multiple keys to multiple values, only if none of the keys exist"
141,MULTI,,Mark the start of a transaction block
142,OBJECT,"subcommand
                    [arguments [arguments ...]]",Inspect the internals of Redis objects
143,PERSIST,key,Remove the expiration from a key
144,PEXPIRE,"key
                    milliseconds",Set a key's time to live in milliseconds
145,PEXPIREAT,"key
                    milliseconds-timestamp",Set the expiration for a key as a UNIX timestamp specified in milliseconds
146,PFADD,"key
                    element [element ...]",Adds the specified elements to the specified HyperLogLog.
147,PFCOUNT,key [key ...],Return the approximated cardinality of the set(s) observed by the HyperLogLog at key(s).
148,PFMERGE,"destkey
                    sourcekey [sourcekey ...]",Merge N different HyperLogLogs into a single one.
149,PING,[message],Ping the server
150,PSETEX,"key
                    milliseconds
                    value",Set the value and expiration in milliseconds of a key
151,PSUBSCRIBE,pattern [pattern ...],Listen for messages published to channels matching the given patterns
152,PUBSUB,"subcommand
                    [argument [argument ...]]",Inspect the state of the Pub/Sub subsystem
153,PTTL,key,Get the time to live for a key in milliseconds
154,PUBLISH,"channel
                    message",Post a message to a channel
155,PUNSUBSCRIBE,[pattern [pattern ...]],Stop listening for messages posted to channels matching the given patterns
156,QUIT,,Close the connection
157,RANDOMKEY,,Return a random key from the keyspace
158,READONLY,,Enables read queries for a connection to a cluster replica node
159,READWRITE,,Disables read queries for a connection to a cluster replica node
160,RENAME,"key
                    newkey",Rename a key
161,RENAMENX,"key
                    newkey","Rename a key, only if the new key does not exist"
162,RESTORE,"key
                    ttl
                    serialized-value
                    [REPLACE]
                    [ABSTTL]
                    [IDLETIME seconds]
                    [FREQ frequency]","Create a key using the provided serialized value, previously obtained using DUMP."
163,ROLE,,Return the role of the instance in the context of replication
164,RPOP,key,Remove and get the last element in a list
165,RPOPLPUSH,"source
                    destination","Remove the last element in a list, prepend it to another list and return it"
166,RPUSH,"key
                    element [element ...]",Append one or multiple elements to a list
167,RPUSHX,"key
                    element [element ...]","Append an element to a list, only if the list exists"
168,SADD,"key
                    member [member ...]",Add one or more members to a set
169,SAVE,,Synchronously save the dataset to disk
170,SCARD,key,Get the number of members in a set
171,SCRIPT DEBUG,YES|SYNC|NO,Set the debug mode for executed scripts.
172,SCRIPT EXISTS,sha1 [sha1 ...],Check existence of scripts in the script cache.
173,SCRIPT FLUSH,,Remove all the scripts from the script cache.
174,SCRIPT KILL,,Kill the script currently in execution.
175,SCRIPT LOAD,script,Load the specified Lua script into the script cache.
176,SDIFF,key [key ...],Subtract multiple sets
177,SDIFFSTORE,"destination
                    key [key ...]",Subtract multiple sets and store the resulting set in a key
178,SELECT,index,Change the selected database for the current connection
179,SET,"key
                    value
                    [EX seconds|PX milliseconds|KEEPTTL]
                    [NX|XX]",Set the string value of a key
180,SETBIT,"key
                    offset
                    value",Sets or clears the bit at offset in the string value stored at key
181,SETEX,"key
                    seconds
                    value",Set the value and expiration of a key
182,SETNX,"key
                    value","Set the value of a key, only if the key does not exist"
183,SETRANGE,"key
                    offset
                    value",Overwrite part of a string at key starting at the specified offset
184,SHUTDOWN,[NOSAVE|SAVE],Synchronously save the dataset to disk and then shut down the server
185,SINTER,key [key ...],Intersect multiple sets
186,SINTERSTORE,"destination
                    key [key ...]",Intersect multiple sets and store the resulting set in a key
187,SISMEMBER,"key
                    member",Determine if a given value is a member of a set
188,SLAVEOF,"host
                    port","Make the server a replica of another instance, or promote it as master. Deprecated starting with Redis 5. Use REPLICAOF instead."
189,REPLICAOF,"host
                    port","Make the server a replica of another instance, or promote it as master."
190,SLOWLOG,"subcommand
                    [argument]",Manages the Redis slow queries log
191,SMEMBERS,key,Get all the members in a set
192,SMOVE,"source
                    destination
                    member",Move a member from one set to another
193,SORT,"key
                    [BY pattern]
                    [LIMIT offset count]
                    [GET pattern [GET pattern ...]]
                    [ASC|DESC]
                    [ALPHA]
                    [STORE destination]","Sort the elements in a list, set or sorted set"
194,SPOP,"key
                    [count]",Remove and return one or multiple random members from a set
195,SRANDMEMBER,"key
                    [count]",Get one or multiple random members from a set
196,SREM,"key
                    member [member ...]",Remove one or more members from a set
197,STRALGO,"LCS
                    algo-specific-argument [algo-specific-argument ...]",Run algorithms (currently LCS) against strings
198,STRLEN,key,Get the length of the value stored in a key
199,SUBSCRIBE,channel [channel ...],Listen for messages published to the given channels
200,SUNION,key [key ...],Add multiple sets
201,SUNIONSTORE,"destination
                    key [key ...]",Add multiple sets and store the resulting set in a key
202,SWAPDB,"index1
                    index2",Swaps two Redis databases
203,SYNC,,Internal command used for replication
204,PSYNC,"replicationid
                    offset",Internal command used for replication
205,TIME,,Return the current server time
206,TOUCH,key [key ...],Alters the last access time of a key(s). Returns the number of existing keys specified.
207,TTL,key,Get the time to live for a key
208,TYPE,key,Determine the type stored at key
209,UNSUBSCRIBE,[channel [channel ...]],Stop listening for messages posted to the given channels
210,UNLINK,key [key ...],"Delete a key asynchronously in another thread. Otherwise it is just as DEL, but non blocking."
211,UNWATCH,,Forget about all watched keys
212,WAIT,"numreplicas
                    timeout",Wait for the synchronous replication of all the write commands sent in the context of the current connection
213,WATCH,key [key ...],Watch the given keys to determine execution of the MULTI/EXEC block
214,ZADD,"key
                    [NX|XX]
                    [CH]
                    [INCR]
                    score member [score member ...]","Add one or more members to a sorted set, or update its score if it already exists"
215,ZCARD,key,Get the number of members in a sorted set
216,ZCOUNT,"key
                    min
                    max",Count the members in a sorted set with scores within the given values
217,ZINCRBY,"key
                    increment
                    member",Increment the score of a member in a sorted set
218,ZINTERSTORE,"destination
                    numkeys
                    key [key ...]
                    [WEIGHTS weight [weight ...]]
                    [AGGREGATE SUM|MIN|MAX]",Intersect multiple sorted sets and store the resulting sorted set in a new key
219,ZLEXCOUNT,"key
                    min
                    max",Count the number of members in a sorted set between a given lexicographical range
220,ZPOPMAX,"key
                    [count]",Remove and return members with the highest scores in a sorted set
221,ZPOPMIN,"key
                    [count]",Remove and return members with the lowest scores in a sorted set
222,ZRANGE,"key
                    start
                    stop
                    [WITHSCORES]","Return a range of members in a sorted set, by index"
223,ZRANGEBYLEX,"key
                    min
                    max
                    [LIMIT offset count]","Return a range of members in a sorted set, by lexicographical range"
224,ZREVRANGEBYLEX,"key
                    max
                    min
                    [LIMIT offset count]","Return a range of members in a sorted set, by lexicographical range, ordered from higher to lower strings."
225,ZRANGEBYSCORE,"key
                    min
                    max
                    [WITHSCORES]
                    [LIMIT offset count]","Return a range of members in a sorted set, by score"
226,ZRANK,"key
                    member",Determine the index of a member in a sorted set
227,ZREM,"key
                    member [member ...]",Remove one or more members from a sorted set
228,ZREMRANGEBYLEX,"key
                    min
                    max",Remove all members in a sorted set between the given lexicographical range
229,ZREMRANGEBYRANK,"key
                    start
                    stop",Remove all members in a sorted set within the given indexes
230,ZREMRANGEBYSCORE,"key
                    min
                    max",Remove all members in a sorted set within the given scores
231,ZREVRANGE,"key
                    start
                    stop
                    [WITHSCORES]","Return a range of members in a sorted set, by index, with scores ordered from high to low"
232,ZREVRANGEBYSCORE,"key
                    max
                    min
                    [WITHSCORES]
                    [LIMIT offset count]","Return a range of members in a sorted set, by score, with scores ordered from high to low"
233,ZREVRANK,"key
                    member","Determine the index of a member in a sorted set, with scores ordered from high to low"
234,ZSCORE,"key
                    member",Get the score associated with the given member in a sorted set
235,ZUNIONSTORE,"destination
                    numkeys
                    key [key ...]
                    [WEIGHTS weight [weight ...]]
                    [AGGREGATE SUM|MIN|MAX]",Add multiple sorted sets and store the resulting sorted set in a new key
236,SCAN,"cursor
                    [MATCH pattern]
                    [COUNT count]
                    [TYPE type]",Incrementally iterate the keys space
237,SSCAN,"key
                    cursor
                    [MATCH pattern]
                    [COUNT count]",Incrementally iterate Set elements
238,HSCAN,"key
                    cursor
                    [MATCH pattern]
                    [COUNT count]",Incrementally iterate hash fields and associated values
239,ZSCAN,"key
                    cursor
                    [MATCH pattern]
                    [COUNT count]",Incrementally iterate sorted sets elements and associated scores
240,XINFO,"[CONSUMERS key groupname]
                    [GROUPS key]
                    [STREAM key]
                    [HELP]",Get information on streams and consumer groups
241,XADD,"key
                    ID
                    field value [field value ...]",Appends a new entry to a stream
242,XTRIM,"key
                    MAXLEN
                    [~]
                    count",Trims the stream to (approximately if '~' is passed) a certain size
243,XDEL,"key
                    ID [ID ...]","Removes the specified entries from the stream. Returns the number of items actually deleted, that may be different from the number of IDs passed in case certain IDs do not exist."
244,XRANGE,"key
                    start
                    end
                    [COUNT count]","Return a range of elements in a stream, with IDs matching the specified IDs interval"
245,XREVRANGE,"key
                    end
                    start
                    [COUNT count]","Return a range of elements in a stream, with IDs matching the specified IDs interval, in reverse order (from greater to smaller IDs) compared to XRANGE"
246,XLEN,key,Return the number of entires in a stream
247,XREAD,"[COUNT count]
                    [BLOCK milliseconds]
                    STREAMS
                    key [key ...]
                    id [id ...]","Return never seen elements in multiple streams, with IDs greater than the ones reported by the caller for each stream. Can block."
248,XGROUP,"[CREATE key groupname id-or-$]
                    [SETID key groupname id-or-$]
                    [DESTROY key groupname]
                    [DELCONSUMER key groupname consumername]","Create, destroy, and manage consumer groups."
249,XREADGROUP,"GROUP group consumer
                    [COUNT count]
                    [BLOCK milliseconds]
                    [NOACK]
                    STREAMS
                    key [key ...]
                    ID [ID ...]","Return new entries from a stream using a consumer group, or access the history of the pending entries for a given consumer. Can block."
250,XACK,"key
                    group
                    ID [ID ...]","Marks a pending message as correctly processed, effectively removing it from the pending entries list of the consumer group. Return value of the command is the number of messages successfully acknowledged, that is, the IDs we were actually able to resolve in the PEL."
251,XCLAIM,"key
                    group
                    consumer
                    min-idle-time
                    ID [ID ...]
                    [IDLE ms]
                    [TIME ms-unix-time]
                    [RETRYCOUNT count]
                    [FORCE]
                    [JUSTID]","Changes (or acquires) ownership of a message in a consumer group, as if the message was delivered to the specified consumer."
252,XPENDING,"key
                    group
                    [start end count]
                    [consumer]","Return information and entries from a stream consumer group pending entries list, that are messages fetched but never acknowledged."
253,LATENCY DOCTOR,,Return a human readable latency analysis report.
254,LATENCY GRAPH,event,Return a latency graph for the event.
255,LATENCY HISTORY,event,Return timestamp-latency samples for the event.
256,LATENCY LATEST,,Return the latest latency samples for all events.
257,LATENCY RESET,[event [event ...]],Reset latency data for one or more events.
258,LATENCY HELP,,Show helpful text about the different subcommands.
